// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhatsAppBusinessCloudAPI.Web.Data;

#nullable disable

namespace WhatsAppBusinessCloudAPI.Web.Migrations
{
    [DbContext(typeof(WebAppDBContext))]
    partial class WebAppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WhatsAppBusinessCloudAPI.Web.Controllers.SendTextPayload", b =>
                {
                    b.Property<int>("tID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tID"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PreviewUrl")
                        .HasColumnType("bit");

                    b.Property<string>("ToNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tID");

                    b.ToTable("SendTextPayload");
                });

            modelBuilder.Entity("WhatsAppBusinessCloudAPI.Web.Controllers.SendWhatsAppPayload", b =>
                {
                    b.Property<int>("tID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tID"));

                    b.Property<int>("MediatID")
                        .HasColumnType("int");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<int>("SendTexttID")
                        .HasColumnType("int");

                    b.Property<int>("TemplatetID")
                        .HasColumnType("int");

                    b.HasKey("tID");

                    b.HasIndex("MediatID");

                    b.HasIndex("SendTexttID");

                    b.HasIndex("TemplatetID");

                    b.ToTable("SendWhatsAppPayload");
                });

            modelBuilder.Entity("WhatsAppBusinessCloudAPI.Web.Controllers.WhatsAppMedia", b =>
                {
                    b.Property<int>("tID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tID"));

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tID");

                    b.ToTable("WhatsAppMedia");
                });

            modelBuilder.Entity("WhatsAppBusinessCloudAPI.Web.Controllers.WhatsappTemplate", b =>
                {
                    b.Property<int>("tID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Params")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tID");

                    b.ToTable("WhatsappTemplate");
                });

            modelBuilder.Entity("WhatsAppBusinessCloudAPI.Web.Data.WhatsAppSentMessage", b =>
                {
                    b.Property<int>("tID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tID"));

                    b.Property<string>("WamID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WhatsAppMessagetID")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tID");

                    b.HasIndex("WhatsAppMessagetID");

                    b.ToTable("whatsAppSentMessages");
                });

            modelBuilder.Entity("WhatsAppBusinessCloudAPI.Web.Controllers.SendWhatsAppPayload", b =>
                {
                    b.HasOne("WhatsAppBusinessCloudAPI.Web.Controllers.WhatsAppMedia", "Media")
                        .WithMany()
                        .HasForeignKey("MediatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatsAppBusinessCloudAPI.Web.Controllers.SendTextPayload", "SendText")
                        .WithMany()
                        .HasForeignKey("SendTexttID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhatsAppBusinessCloudAPI.Web.Controllers.WhatsappTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplatetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("SendText");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("WhatsAppBusinessCloudAPI.Web.Data.WhatsAppSentMessage", b =>
                {
                    b.HasOne("WhatsAppBusinessCloudAPI.Web.Controllers.SendWhatsAppPayload", "WhatsAppMessage")
                        .WithMany()
                        .HasForeignKey("WhatsAppMessagetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WhatsAppMessage");
                });
#pragma warning restore 612, 618
        }
    }
}
